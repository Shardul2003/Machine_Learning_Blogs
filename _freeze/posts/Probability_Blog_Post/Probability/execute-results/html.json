{
  "hash": "97ce605a9147032d7f9f9aab5cd00cc3",
  "result": {
    "markdown": "---\ntitle: 'Probability Blog'\ndate: '2023-11-28'\ncategories: ['Machine Learning', 'Probability', 'Logistic Regression', 'Confusion Matrix']\ndescription: 'This post looks at an application of probability within Machine Learning through the analysis of a data set.'\nexecute: \n  message: false\n  warning: false\neditor_options: \n  chunk_output_type: console\n---\n\n# Background\n\nThis blog post looks at probability within Machine Learning, and how it is used with algorithms like Logistic Regression to analyze data sets. This blog will look at analyzing a voting patterns of two parties in the US Government's House. \n\n## Setup\n\nWe will first begin by checking our python version and importing the necessary libraries for this. We will use Pandas to read the csv file and manipulate its data, and matplotlib's pyplot to display graphs and plot our data. Scikit learn (sklearn) libraries will also be imported for its metrics and models. We will use the metrics to see how accurate the model is and build a confusion matrix. The model libraries will be used to build the Logistic Regression and also split the data.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport sys\n\n#Project requires Python 3.7 or above\nassert sys.version_info >= (3, 7)\n\n# Import libraries\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn import metrics\nfrom sklearn.metrics import accuracy_score, confusion_matrix\nfrom sklearn.metrics import ConfusionMatrixDisplay\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LogisticRegression\n```\n:::\n\n\n### Data\n\nLet's start by seeing what our data looks like.\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n# Read data\ndata = pd.read_csv(\"house_votes.csv\")\ndata.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=26}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Class Name</th>\n      <th>handicapped-infants</th>\n      <th>water-project-cost-sharing</th>\n      <th>adoption-of-the-budget-resolution</th>\n      <th>physician-fee-freeze</th>\n      <th>el-salvador-aid</th>\n      <th>religious-groups-in-schools</th>\n      <th>anti-satellite-test-ban</th>\n      <th>aid-to-nicaraguan-contras</th>\n      <th>mx-missile</th>\n      <th>immigration</th>\n      <th>synfuels-corporation-cutback</th>\n      <th>education-spending</th>\n      <th>superfund-right-to-sue</th>\n      <th>crime</th>\n      <th>duty-free-exports</th>\n      <th>export-administration-act-south-africa</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>republican</td>\n      <td>n</td>\n      <td>y</td>\n      <td>n</td>\n      <td>y</td>\n      <td>y</td>\n      <td>y</td>\n      <td>n</td>\n      <td>n</td>\n      <td>n</td>\n      <td>y</td>\n      <td>?</td>\n      <td>y</td>\n      <td>y</td>\n      <td>y</td>\n      <td>n</td>\n      <td>y</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>republican</td>\n      <td>n</td>\n      <td>y</td>\n      <td>n</td>\n      <td>y</td>\n      <td>y</td>\n      <td>y</td>\n      <td>n</td>\n      <td>n</td>\n      <td>n</td>\n      <td>n</td>\n      <td>n</td>\n      <td>y</td>\n      <td>y</td>\n      <td>y</td>\n      <td>n</td>\n      <td>?</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>democrat</td>\n      <td>?</td>\n      <td>y</td>\n      <td>y</td>\n      <td>?</td>\n      <td>y</td>\n      <td>y</td>\n      <td>n</td>\n      <td>n</td>\n      <td>n</td>\n      <td>n</td>\n      <td>y</td>\n      <td>n</td>\n      <td>y</td>\n      <td>y</td>\n      <td>n</td>\n      <td>n</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>democrat</td>\n      <td>n</td>\n      <td>y</td>\n      <td>y</td>\n      <td>n</td>\n      <td>?</td>\n      <td>y</td>\n      <td>n</td>\n      <td>n</td>\n      <td>n</td>\n      <td>n</td>\n      <td>y</td>\n      <td>n</td>\n      <td>y</td>\n      <td>n</td>\n      <td>n</td>\n      <td>y</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>democrat</td>\n      <td>y</td>\n      <td>y</td>\n      <td>y</td>\n      <td>n</td>\n      <td>y</td>\n      <td>y</td>\n      <td>n</td>\n      <td>n</td>\n      <td>n</td>\n      <td>n</td>\n      <td>y</td>\n      <td>?</td>\n      <td>y</td>\n      <td>y</td>\n      <td>y</td>\n      <td>y</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nThe dimensions of the data is (435, 17). There were 16 different issues for which voting in the House of Representatives was conducted, and 435 representatives voted. However, in the data set we can see some votes listed as '?'. This indicates that a vote was not given. We can now see how the data is structured and the way votes were provided.\n\n### Plotting the Data\n\nLet's plot the data to visualize what the distributions look like and see if we can draw any initial inferences from what we see.\n\nFirst, let's look at what the voting distribution actually looked like. While we have all the votes, it is difficult to see how many votes for yes/no/? were actually recevied in each category. Let's first create a table to display this information.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n# Display data distribution\ndf = pd.DataFrame([], columns=['Yes', 'No', \"?\"])\nfor col in data.columns[1:]: # '1:' to skip first column (Class Name)\n    vals = []\n    yes = data[col].value_counts()['y']\n    no = data[col].value_counts()['n']\n    na = data[col].value_counts()['?']\n\n    vals.append(yes)\n    vals.append(no)\n    vals.append(na)\n\n    df.loc[col] = vals\n\n#Visualize df vote distribution\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=27}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Yes</th>\n      <th>No</th>\n      <th>?</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>handicapped-infants</th>\n      <td>187</td>\n      <td>236</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>water-project-cost-sharing</th>\n      <td>195</td>\n      <td>192</td>\n      <td>48</td>\n    </tr>\n    <tr>\n      <th>adoption-of-the-budget-resolution</th>\n      <td>253</td>\n      <td>171</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>physician-fee-freeze</th>\n      <td>177</td>\n      <td>247</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>el-salvador-aid</th>\n      <td>212</td>\n      <td>208</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>religious-groups-in-schools</th>\n      <td>272</td>\n      <td>152</td>\n      <td>11</td>\n    </tr>\n    <tr>\n      <th>anti-satellite-test-ban</th>\n      <td>239</td>\n      <td>182</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>aid-to-nicaraguan-contras</th>\n      <td>242</td>\n      <td>178</td>\n      <td>15</td>\n    </tr>\n    <tr>\n      <th>mx-missile</th>\n      <td>207</td>\n      <td>206</td>\n      <td>22</td>\n    </tr>\n    <tr>\n      <th>immigration</th>\n      <td>216</td>\n      <td>212</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>synfuels-corporation-cutback</th>\n      <td>150</td>\n      <td>264</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>education-spending</th>\n      <td>171</td>\n      <td>233</td>\n      <td>31</td>\n    </tr>\n    <tr>\n      <th>superfund-right-to-sue</th>\n      <td>209</td>\n      <td>201</td>\n      <td>25</td>\n    </tr>\n    <tr>\n      <th>crime</th>\n      <td>248</td>\n      <td>170</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>duty-free-exports</th>\n      <td>174</td>\n      <td>233</td>\n      <td>28</td>\n    </tr>\n    <tr>\n      <th>export-administration-act-south-africa</th>\n      <td>269</td>\n      <td>62</td>\n      <td>104</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nThis is better to look at the overall voting spread of each category. After a first glance, it appears that most category had more 'yes' votes, indicating that in favor of the bill or issue passed was more likely. \n\nLet's display this on a stacked bar graph to see how the spread looks on a plot. We will also store the vote result in a list. This will be used later when we want to compare the winners. The list will be in left to right order of the categories provided.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# Plot data on stacked bar graph\ndf.plot.bar(stacked=True)\nwin_vote = ['No', 'Yes', 'Yes', 'No', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'No', 'No', 'Yes', 'Yes', 'No', 'Yes']\n```\n\n::: {.cell-output .cell-output-display}\n![](Probability_files/figure-html/cell-5-output-1.png){width=575 height=657}\n:::\n:::\n\n\nLet's look at party specific data now. We know that two parties, the Republicans and Democrats, were present in voting. Let's see how many members from each party are present.\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# Look at party specific data, who voted yes/no in each category\nprint(\"Republicans: \", data['Class Name'].value_counts()['republican'])\nprint(\"Democrats: \", data['Class Name'].value_counts()['democrat'])\n\nlabels = ['Republicans', 'Democrats']\nplt.pie(data['Class Name'].value_counts(), labels=labels, autopct='%1.0f%%')\nplt.show()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRepublicans:  168\nDemocrats:  267\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](Probability_files/figure-html/cell-6-output-2.png){width=389 height=389}\n:::\n:::\n\n\nThere are more Democrats present than Republicans. This is important information as it could indicate one party had stronger voting power, which may have played a role in which party got its favored outcome for each bill passed.\n\nLet's take each issue, and split it amongst the voting distribution for both parties. We can look at this and see which party got the favorable outcome. This will be done using the pivot table method which will build the table per each column against the Class Name. We will also use the win_votes list to add to the table as we go through the columns.\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\n# Find number of wins for each voting issue per party \ndf2 = pd.DataFrame(data)\ni = 0 # Go through winning votes\nfor col in data.columns[1:]: # 1: Skips class name\n    table = df2.pivot_table(index='Class Name', columns=col, aggfunc='size', fill_value=0)\n    table['Winning Vote'] = win_vote[i]\n    table.at['republican', 'Winning Vote'] = 'NA' #Format, remove from last\n    display(table)\n    i = i + 1\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>handicapped-infants</th>\n      <th>?</th>\n      <th>n</th>\n      <th>y</th>\n      <th>Winning Vote</th>\n    </tr>\n    <tr>\n      <th>Class Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>democrat</th>\n      <td>9</td>\n      <td>102</td>\n      <td>156</td>\n      <td>No</td>\n    </tr>\n    <tr>\n      <th>republican</th>\n      <td>3</td>\n      <td>134</td>\n      <td>31</td>\n      <td>NA</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>water-project-cost-sharing</th>\n      <th>?</th>\n      <th>n</th>\n      <th>y</th>\n      <th>Winning Vote</th>\n    </tr>\n    <tr>\n      <th>Class Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>democrat</th>\n      <td>28</td>\n      <td>119</td>\n      <td>120</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <th>republican</th>\n      <td>20</td>\n      <td>73</td>\n      <td>75</td>\n      <td>NA</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>adoption-of-the-budget-resolution</th>\n      <th>?</th>\n      <th>n</th>\n      <th>y</th>\n      <th>Winning Vote</th>\n    </tr>\n    <tr>\n      <th>Class Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>democrat</th>\n      <td>7</td>\n      <td>29</td>\n      <td>231</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <th>republican</th>\n      <td>4</td>\n      <td>142</td>\n      <td>22</td>\n      <td>NA</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>physician-fee-freeze</th>\n      <th>?</th>\n      <th>n</th>\n      <th>y</th>\n      <th>Winning Vote</th>\n    </tr>\n    <tr>\n      <th>Class Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>democrat</th>\n      <td>8</td>\n      <td>245</td>\n      <td>14</td>\n      <td>No</td>\n    </tr>\n    <tr>\n      <th>republican</th>\n      <td>3</td>\n      <td>2</td>\n      <td>163</td>\n      <td>NA</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>el-salvador-aid</th>\n      <th>?</th>\n      <th>n</th>\n      <th>y</th>\n      <th>Winning Vote</th>\n    </tr>\n    <tr>\n      <th>Class Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>democrat</th>\n      <td>12</td>\n      <td>200</td>\n      <td>55</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <th>republican</th>\n      <td>3</td>\n      <td>8</td>\n      <td>157</td>\n      <td>NA</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>religious-groups-in-schools</th>\n      <th>?</th>\n      <th>n</th>\n      <th>y</th>\n      <th>Winning Vote</th>\n    </tr>\n    <tr>\n      <th>Class Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>democrat</th>\n      <td>9</td>\n      <td>135</td>\n      <td>123</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <th>republican</th>\n      <td>2</td>\n      <td>17</td>\n      <td>149</td>\n      <td>NA</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>anti-satellite-test-ban</th>\n      <th>?</th>\n      <th>n</th>\n      <th>y</th>\n      <th>Winning Vote</th>\n    </tr>\n    <tr>\n      <th>Class Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>democrat</th>\n      <td>8</td>\n      <td>59</td>\n      <td>200</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <th>republican</th>\n      <td>6</td>\n      <td>123</td>\n      <td>39</td>\n      <td>NA</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>aid-to-nicaraguan-contras</th>\n      <th>?</th>\n      <th>n</th>\n      <th>y</th>\n      <th>Winning Vote</th>\n    </tr>\n    <tr>\n      <th>Class Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>democrat</th>\n      <td>4</td>\n      <td>45</td>\n      <td>218</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <th>republican</th>\n      <td>11</td>\n      <td>133</td>\n      <td>24</td>\n      <td>NA</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>mx-missile</th>\n      <th>?</th>\n      <th>n</th>\n      <th>y</th>\n      <th>Winning Vote</th>\n    </tr>\n    <tr>\n      <th>Class Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>democrat</th>\n      <td>19</td>\n      <td>60</td>\n      <td>188</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <th>republican</th>\n      <td>3</td>\n      <td>146</td>\n      <td>19</td>\n      <td>NA</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>immigration</th>\n      <th>?</th>\n      <th>n</th>\n      <th>y</th>\n      <th>Winning Vote</th>\n    </tr>\n    <tr>\n      <th>Class Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>democrat</th>\n      <td>4</td>\n      <td>139</td>\n      <td>124</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <th>republican</th>\n      <td>3</td>\n      <td>73</td>\n      <td>92</td>\n      <td>NA</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>synfuels-corporation-cutback</th>\n      <th>?</th>\n      <th>n</th>\n      <th>y</th>\n      <th>Winning Vote</th>\n    </tr>\n    <tr>\n      <th>Class Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>democrat</th>\n      <td>12</td>\n      <td>126</td>\n      <td>129</td>\n      <td>No</td>\n    </tr>\n    <tr>\n      <th>republican</th>\n      <td>9</td>\n      <td>138</td>\n      <td>21</td>\n      <td>NA</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>education-spending</th>\n      <th>?</th>\n      <th>n</th>\n      <th>y</th>\n      <th>Winning Vote</th>\n    </tr>\n    <tr>\n      <th>Class Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>democrat</th>\n      <td>18</td>\n      <td>213</td>\n      <td>36</td>\n      <td>No</td>\n    </tr>\n    <tr>\n      <th>republican</th>\n      <td>13</td>\n      <td>20</td>\n      <td>135</td>\n      <td>NA</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>superfund-right-to-sue</th>\n      <th>?</th>\n      <th>n</th>\n      <th>y</th>\n      <th>Winning Vote</th>\n    </tr>\n    <tr>\n      <th>Class Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>democrat</th>\n      <td>15</td>\n      <td>179</td>\n      <td>73</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <th>republican</th>\n      <td>10</td>\n      <td>22</td>\n      <td>136</td>\n      <td>NA</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>crime</th>\n      <th>?</th>\n      <th>n</th>\n      <th>y</th>\n      <th>Winning Vote</th>\n    </tr>\n    <tr>\n      <th>Class Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>democrat</th>\n      <td>10</td>\n      <td>167</td>\n      <td>90</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <th>republican</th>\n      <td>7</td>\n      <td>3</td>\n      <td>158</td>\n      <td>NA</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>duty-free-exports</th>\n      <th>?</th>\n      <th>n</th>\n      <th>y</th>\n      <th>Winning Vote</th>\n    </tr>\n    <tr>\n      <th>Class Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>democrat</th>\n      <td>16</td>\n      <td>91</td>\n      <td>160</td>\n      <td>No</td>\n    </tr>\n    <tr>\n      <th>republican</th>\n      <td>12</td>\n      <td>142</td>\n      <td>14</td>\n      <td>NA</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>export-administration-act-south-africa</th>\n      <th>?</th>\n      <th>n</th>\n      <th>y</th>\n      <th>Winning Vote</th>\n    </tr>\n    <tr>\n      <th>Class Name</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>democrat</th>\n      <td>82</td>\n      <td>12</td>\n      <td>173</td>\n      <td>Yes</td>\n    </tr>\n    <tr>\n      <th>republican</th>\n      <td>22</td>\n      <td>50</td>\n      <td>96</td>\n      <td>NA</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nFrom all the tables, we can see that democrats voting was generally much stronger, but partially also because there were more members of that party present. Most bills were voted in favor of (yes), and generally Democrats were more likely to get the favorable outcome. \n\n\n### Prepare The Data\n\nNow that we know what to expect from our analysis and how our data spread is structured, we can prepare the data set for the model. \n\nSince the data comes in yes/no format, we will need to convert this to numerical values so our Logistic Regression can work with the data. We will map 'republican' to 1 and 'democrat' to 0. Similarly for the data, we will map 'yes' to 1 and 'no' to 0. Since we do not want to count '?' votes towards any single party, we will mark those votes with a value of 0.5, a neutral point.\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\n# Prep data for Logistic Regression\nX = data.copy()\nX['Class Name'] = X['Class Name'].map({'republican':1, 'democrat':0})\n\nfor col in X.columns.drop('Class Name'):\n    X[col] = X[col].map( \n                   {'y':1 ,'n':0, '?':0.5})\n\nprint(display(X.head()))\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Class Name</th>\n      <th>handicapped-infants</th>\n      <th>water-project-cost-sharing</th>\n      <th>adoption-of-the-budget-resolution</th>\n      <th>physician-fee-freeze</th>\n      <th>el-salvador-aid</th>\n      <th>religious-groups-in-schools</th>\n      <th>anti-satellite-test-ban</th>\n      <th>aid-to-nicaraguan-contras</th>\n      <th>mx-missile</th>\n      <th>immigration</th>\n      <th>synfuels-corporation-cutback</th>\n      <th>education-spending</th>\n      <th>superfund-right-to-sue</th>\n      <th>crime</th>\n      <th>duty-free-exports</th>\n      <th>export-administration-act-south-africa</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.5</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.5</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>0.5</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.5</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.5</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.5</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nNone\n```\n:::\n:::\n\n\n### Logistic Regression\n\nFirst, the data will be split into training and testing sets, so we have can compare how well our model works after training it on the train set.\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\n# Split data set into train and test sets, use standard 80-20 split\nX_train, X_test, Y_train, Y_test = train_test_split(X.drop('Class Name',axis=1), X['Class Name'], train_size=0.8, test_size=0.2)\n```\n:::\n\n\nWe will then build the Logistic Regression model. Since this model applies the Maximum Likelihood method, it is very powerful for calculating probabilities. It essentially will use these to figure out how to classify the data. This model will take the data and determine which party the individual belongs to based on their voting data. We will fit the data and then create a prediction list.\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\n# Split data set into train and test sets, use standard 80-20 split\nX_train, X_test, Y_train, Y_test = train_test_split(X.drop('Class Name',axis=1), X['Class Name'], train_size=0.8, test_size=0.2)\n\n# Logistic Regression\nlog = LogisticRegression()\nlog.fit(X_train, Y_train)\npredict = log.predict(X_test)\n```\n:::\n\n\nLet's check how well our model works by finding its accuracy score. We will compare the predict set to the test set.\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\nscore = accuracy_score(Y_test, predict)\nprint(score)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n0.9885057471264368\n```\n:::\n:::\n\n\nThe model performs very well to this data set and has good accuracy. Over 90% accuracy means this Logistic Regression model fits the data set very strongly.\n\n\n### Additional Analysis - Confusion Matrix\n\nTo better understand how our model classified the data and its overall accuracy, we will look at a confusion matrix. This will show how many predictions are correct and incorrect, essentially giving us the prediction summary. It will provide data on the True Negatives, False Positives, False Negatives, and True Positives.\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\nconfusion = confusion_matrix(Y_test, predict)\nconfusion\n```\n\n::: {.cell-output .cell-output-display execution_count=35}\n```\narray([[44,  1],\n       [ 0, 42]])\n```\n:::\n:::\n\n\nThis is the output array. Let's graph this to visualize it better, for which we can use the ConfusionMatrixDisplay. \n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\n# Show confusion matrix on plot\ncm_display = ConfusionMatrixDisplay(confusion_matrix = confusion, display_labels = [False, True])\ncm_display.plot()\n```\n\n::: {.cell-output .cell-output-display execution_count=36}\n```\n<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x124eda510>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](Probability_files/figure-html/cell-13-output-2.png){width=521 height=429}\n:::\n:::\n\n\nThis lets us visualize how the Confusion matrix appears.\n\n",
    "supporting": [
      "Probability_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}